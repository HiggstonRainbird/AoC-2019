(* ::Package:: *)

(* ::Text:: *)
(*Written December 9th, 2019.*)


(* ::Subsubsection:: *)
(*Import*)


(* ::Input:: *)
(*input=ToExpression/@(StringSplit[#,","]&/@Flatten[Import[FileNameJoin[{NotebookDirectory[],"Day9Input.txt"}],"Table"]])[[1]];*)


(* ::Subsubsection:: *)
(*Part 1*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*runIntcode[inputList_List,inputValues_List,OptionsPattern[{"OutputSteps"->False}]]:=*)
(*Module[{*)
(*intcodeProgram,*)
(*stepList={},*)
(*outputValue=0,*)
(**)
(*padLengths={1->5,2->5,3->3,4->3,5->4,6->4,7->5,8->5,9->3},*)
(**)
(*i,jump,counter,*)
(**)
(*j,inputValue,*)
(*outputFlag,*)
(*fullOpCode,opCode,parameterModes,parameters,*)
(**)
(*relativeBase=0,memory*)
(*},*)
(*intcodeProgram[n_Integer]:=0;*)
(*Do[intcodeProgram[i]=inputList[[i]],{i,Length[inputList]}];*)
(**)
(*i=1;jump=1;counter=0;*)
(*j=1;*)
(**)
(*While[intcodeProgram[i]!=99,*)
(*fullOpCode=*)
(*PadLeft[IntegerDigits[intcodeProgram[i]],*)
(*IntegerDigits[intcodeProgram[i]][[-1]]/.padLengths];*)
(*opCode=FromDigits[fullOpCode[[-2;;]]];*)
(*parameterModes=Reverse[fullOpCode[[;;-3]]];*)
(*parameters=Table[*)
(*Which[*)
(*parameterModes[[j]]==0,*)
(*intcodeProgram[i+j]+1,*)
(**)
(*parameterModes[[j]]==1,*)
(*i+j,*)
(**)
(*parameterModes[[j]]==2,*)
(*intcodeProgram[i+j]+1+relativeBase],*)
(*{j,Length[parameterModes]}];*)
(*jump=Length[parameterModes]+1;*)
(**)
(*If[OptionValue["OutputSteps"],*)
(*AppendTo[stepList,*)
(*Table[intcodeProgram[i+j],{j,0,Length[parameterModes]}]]];*)
(**)
(*Which[*)
(*opCode==1,*)
(*intcodeProgram[parameters[[3]]]=intcodeProgram[parameters[[2]]]+intcodeProgram[parameters[[1]]],*)
(**)
(*opCode==2,*)
(*intcodeProgram[parameters[[3]]]=intcodeProgram[parameters[[2]]]*intcodeProgram[parameters[[1]]],*)
(**)
(*opCode==3,*)
(*inputValue=inputValues[[j]];*)
(*intcodeProgram[parameters[[1]]]=inputValue;*)
(*If[j<Length[inputValues],j++],*)
(**)
(*opCode==4,*)
(*outputValue=intcodeProgram[parameters[[1]]];*)
(*Print[outputValue],*)
(**)
(*opCode==5,*)
(*If[intcodeProgram[parameters[[1]]]!=0,*)
(*i=intcodeProgram[parameters[[2]]]+1;*)
(*jump=0],*)
(**)
(*opCode==6,*)
(*If[intcodeProgram[parameters[[1]]]==0,*)
(*i=intcodeProgram[parameters[[2]]]+1;*)
(*jump=0],*)
(**)
(*opCode==7,*)
(*If[intcodeProgram[parameters[[1]]]<intcodeProgram[parameters[[2]]],*)
(*intcodeProgram[parameters[[3]]]=1,*)
(*intcodeProgram[parameters[[3]]]=0],*)
(**)
(*opCode==8,*)
(*If[intcodeProgram[parameters[[1]]]==intcodeProgram[parameters[[2]]],*)
(*intcodeProgram[parameters[[3]]]=1,*)
(*intcodeProgram[parameters[[3]]]=0],*)
(**)
(*opCode==9,*)
(*relativeBase+=intcodeProgram[parameters[[1]]],*)
(**)
(*opCode==99\[Or]i>Length[intcodeProgram],*)
(*Break[]*)
(*];*)
(*counter++;*)
(*If[counter>1000000,*)
(*Print["Infinite Loop"];*)
(*Break[]];*)
(*i+=jump;*)
(*];*)
(*If[intcodeProgram[i]==99,Print["Halt"]];*)
(*If[*)
(*OptionValue["OutputSteps"],*)
(*{outputValue,stepList},*)
(*outputValue]*)
(*]*)


(* ::Input:: *)
(*runIntcode[{109,1,204,-1,1001,100,1,100,1008,100,16,101,1006,101,0,99},{},"OutputSteps"->True]*)


(* ::Input:: *)
(*runIntcode[input,{1}]*)


(* ::Subsubsection:: *)
(*Part 2*)


(* ::Input:: *)
(*runIntcode[input,{2}]*)



