(* ::Package:: *)

(* ::Text:: *)
(*Written December 24th, 2019.*)


(* ::Subsubsection:: *)
(*Import*)


(* ::Input:: *)
(*input=Characters/@StringSplit[Import[FileNameJoin[{NotebookDirectory[],"Day24Input.txt"}]],"\n"];*)
(*input=input/.{"#"->1,"."->0};*)


(* ::Subsubsection:: *)
(*Part 1*)


(* ::Input:: *)
(*state=input;*)
(*newState=state;*)
(**)
(*ClearAll@f;*)
(*f[i_,j_,list_]:=*)
(*If[i>5\[Or]i<=0\[Or]j>5\[Or]j<=0,0,list[[i,j]]];*)
(**)
(*listOfStates=*)
(*Table[*)
(*state=newState;*)
(*Do[*)
(*If[*)
(*f[i,j,state]==1,*)
(*If[f[i-1,j,state]+f[i+1,j,state]+f[i,j-1,state]+f[i,j+1,state]!=1,newState[[i,j]]=0],*)
(*If[0<f[i-1,j,state]+f[i+1,j,state]+f[i,j-1,state]+f[i,j+1,state]<3,newState[[i,j]]=1];*)
(*];*)
(*,{i,5},{j,5}];*)
(*newState,*)
(*{k,100}];*)


(* ::Input:: *)
(*Total[Total/@Table[*)
(*2^(5(i-1)+(j-1)) listOfStates[[32,i,j]],*)
(*{i,5},{j,5}]]*)


(* ::Subsubsection:: *)
(*Part 2*)


(* ::Input:: *)
(*state=input;*)
(**)
(*neighbors[{i_,j_,level_}]:=*)
(*Flatten[*)
(*{Which[*)
(*i-1==0,{{2,3,level-1}},*)
(*i-1==3\[And]j==3,Table[{5,n,level+1},{n,1,5}],*)
(*True,{{i-1,j,level}}*)
(*],*)
(*Which[*)
(*i+1==6,{{4,3,level-1}},*)
(*i+1==3\[And]j==3,Table[{1,n,level+1},{n,1,5}],*)
(*True,{{i+1,j,level}}*)
(*],*)
(*Which[*)
(*j-1==0,{{3,2,level-1}},*)
(*j-1==3\[And]i==3,Table[{n,5,level+1},{n,1,5}],*)
(*True,{{i,j-1,level}}*)
(*],*)
(*Which[*)
(*j+1==6,{{3,4,level-1}},*)
(*j+1==3\[And]i==3,Table[{n,1,level+1},{n,1,5}],*)
(*True,{{i,j+1,level}}*)
(*]},1];*)
(**)
(*currentState=Flatten[Table[{i,j,1}->state[[i,j]],{i,5},{j,5}],1];*)
(*currentState=Delete[currentState,2*5+3];*)
(*currentState=*)
(*Join[currentState,*)
(*#->0&/@Complement[*)
(*Flatten[Table[neighbors[position[[1]]],{position,currentState}],1],*)
(*currentState[[;;,1]]]*)
(*];*)
(**)
(*Do[*)
(*positionsToCheck=Union[Flatten[Join[neighbors[#[[1]]]&/@Select[currentState,#[[2]]==1&],{currentState[[;;,1]]}],1]];*)
(*currentState=*)
(*Join[currentState,*)
(*#->0&/@Complement[*)
(*Union[Flatten[neighbors/@positionsToCheck,1]],*)
(*currentState[[;;,1]]]*)
(*];*)
(*newState=*)
(*Table[*)
(*If[*)
(*(position/.currentState)==1,*)
(*If[Total[neighbors[position]/.currentState]!=1,position->0,position->1],*)
(*If[0<Total[neighbors[position]/.currentState]<3,position->1,position->0]*)
(*]*)
(*,{position,positionsToCheck}];*)
(*currentState=newState;*)
(*globalWatch={k,Length[currentState]},*)
(*{k,200}]*)


(* ::Input:: *)
(*Total[currentState[[;;,2]]]*)
